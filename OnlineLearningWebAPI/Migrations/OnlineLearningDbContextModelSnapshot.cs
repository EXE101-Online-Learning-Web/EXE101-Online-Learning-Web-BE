// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineLearningWebAPI.Data;

#nullable disable

namespace OnlineLearningWebAPI.Migrations
{
    [DbContext(typeof(OnlineLearningDbContext))]
    partial class OnlineLearningDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("accountId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("avatar");

                    b.Property<DateOnly?>("DateSubscription")
                        .HasColumnType("date")
                        .HasColumnName("dateSubscription");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<bool?>("IsBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isBan");

                    b.Property<bool?>("IsVip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isVip");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("passwordHash");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__F267251EDDB46253");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Avatar = "admin_avatar.png",
                            DateSubscription = new DateOnly(2024, 1, 1),
                            Email = "admin@gmail.com",
                            FullName = "Admin User",
                            IsBan = false,
                            IsVip = true,
                            PasswordHash = "123456",
                            RoleId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            Avatar = "jane_avatar.png",
                            DateSubscription = new DateOnly(2024, 1, 1),
                            Email = "jane.smith@gmail.com",
                            FullName = "Jane Smith",
                            IsBan = false,
                            IsVip = false,
                            PasswordHash = "123456",
                            RoleId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            Avatar = "john_avatar.png",
                            DateSubscription = new DateOnly(2024, 1, 1),
                            Email = "john.davis@gmail.com",
                            FullName = "John Davis",
                            IsBan = true,
                            IsVip = false,
                            PasswordHash = "123456",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.ActivityLog", b =>
                {
                    b.Property<int>("ActivityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("activityLogId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityLogId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("accountId");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("action");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("details");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ActivityLogId")
                        .HasName("PK__Activity__1025273EB10ED843");

                    b.HasIndex("AccountId");

                    b.ToTable("ActivityLog", (string)null);

                    b.HasData(
                        new
                        {
                            ActivityLogId = 1,
                            AccountId = 3,
                            Action = "Logged In",
                            Details = "User logged into the system.",
                            Timestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ActivityLogId = 2,
                            AccountId = 3,
                            Action = "Enrolled in Course",
                            Details = "User enrolled in C# for Beginners.",
                            Timestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ActivityLogId = 3,
                            AccountId = 3,
                            Action = "Completed Quiz",
                            Details = "User completed C# Basics Quiz.",
                            Timestamp = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Certificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("certificateId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("accountId");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.HasKey("CertificateId")
                        .HasName("PK__Certific__A15CBEAE9DB371B5");

                    b.HasIndex("AccountId");

                    b.ToTable("Certificate", (string)null);

                    b.HasData(
                        new
                        {
                            CertificateId = 1,
                            AccountId = 3,
                            CourseId = 1,
                            Image = "certificate1.jpg"
                        },
                        new
                        {
                            CertificateId = 2,
                            AccountId = 3,
                            CourseId = 2,
                            Image = "certificate2.jpg"
                        },
                        new
                        {
                            CertificateId = 3,
                            AccountId = 3,
                            CourseId = 3,
                            Image = "certificate3.jpg"
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("courseTitle");

                    b.Property<DateOnly?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacherId");

                    b.HasKey("CourseId")
                        .HasName("PK__Course__2AA84FD10A5AAC84");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Course", (string)null);

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CategoryId = 1,
                            CourseTitle = "C# for Beginners",
                            CreateDate = new DateOnly(2024, 1, 1),
                            Description = "Learn the basics of C# programming.",
                            TeacherId = 2
                        },
                        new
                        {
                            CourseId = 2,
                            CategoryId = 2,
                            CourseTitle = "Graphic Design Basics",
                            CreateDate = new DateOnly(2024, 1, 1),
                            Description = "Introduction to graphic design principles.",
                            TeacherId = 2
                        },
                        new
                        {
                            CourseId = 3,
                            CategoryId = 3,
                            CourseTitle = "Digital Marketing 101",
                            CreateDate = new DateOnly(2024, 1, 1),
                            Description = "Learn the fundamentals of digital marketing.",
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.CourseCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId")
                        .HasName("PK__CourseCa__23CAF1D8ACDABDB2");

                    b.ToTable("CourseCategory", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Programming"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Design"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.CourseEnrollment", b =>
                {
                    b.Property<int>("CourseEnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("courseEnrollmentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseEnrollmentId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("accountId");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<DateOnly?>("EnrollmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("enrollmentDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isCompleted");

                    b.Property<int?>("ProgressPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("progressPercentage");

                    b.HasKey("CourseEnrollmentId")
                        .HasName("PK__CourseEn__3E39D9FCB3A7258F");

                    b.HasIndex("AccountId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseEnrollment", (string)null);

                    b.HasData(
                        new
                        {
                            CourseEnrollmentId = 1,
                            AccountId = 3,
                            CourseId = 1,
                            EnrollmentDate = new DateOnly(2024, 1, 1),
                            IsCompleted = false,
                            ProgressPercentage = 25
                        },
                        new
                        {
                            CourseEnrollmentId = 2,
                            AccountId = 3,
                            CourseId = 2,
                            EnrollmentDate = new DateOnly(2024, 1, 1),
                            IsCompleted = false,
                            ProgressPercentage = 50
                        },
                        new
                        {
                            CourseEnrollmentId = 3,
                            AccountId = 3,
                            CourseId = 3,
                            EnrollmentDate = new DateOnly(2024, 1, 1),
                            IsCompleted = false,
                            ProgressPercentage = 0
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.CourseTag", b =>
                {
                    b.Property<int>("CourseTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("courseTagId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseTagId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<string>("TagName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tagName");

                    b.HasKey("CourseTagId")
                        .HasName("PK__CourseTa__E7E342A0200F6BB1");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseTags");

                    b.HasData(
                        new
                        {
                            CourseTagId = 1,
                            CourseId = 1,
                            TagName = "C#"
                        },
                        new
                        {
                            CourseTagId = 2,
                            CourseId = 2,
                            TagName = "Design"
                        },
                        new
                        {
                            CourseTagId = 3,
                            CourseId = 3,
                            TagName = "Marketing"
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.ExamTest", b =>
                {
                    b.Property<int>("ExamTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("examTestId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamTestId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<int>("MoocId")
                        .HasColumnType("int")
                        .HasColumnName("moocId");

                    b.Property<string>("TestName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("testName");

                    b.HasKey("ExamTestId")
                        .HasName("PK__ExamTest__DC7B3C15142788E6");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MoocId");

                    b.ToTable("ExamTest", (string)null);

                    b.HasData(
                        new
                        {
                            ExamTestId = 1,
                            CreatedBy = 2,
                            Duration = 60,
                            MoocId = 1,
                            TestName = "Programming Test"
                        },
                        new
                        {
                            ExamTestId = 2,
                            CreatedBy = 2,
                            Duration = 45,
                            MoocId = 2,
                            TestName = "Design Test"
                        },
                        new
                        {
                            ExamTestId = 3,
                            CreatedBy = 2,
                            Duration = 30,
                            MoocId = 3,
                            TestName = "Marketing Test"
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("feedbackId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("accountId");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<string>("FeedbackText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("feedbackText");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__2613FD24A887532F");

                    b.HasIndex("AccountId");

                    b.HasIndex("CourseId");

                    b.ToTable("Feedback", (string)null);

                    b.HasData(
                        new
                        {
                            FeedbackId = 1,
                            AccountId = 3,
                            CourseId = 1,
                            FeedbackText = "Great course!",
                            Rating = 5
                        },
                        new
                        {
                            FeedbackId = 2,
                            AccountId = 3,
                            CourseId = 2,
                            FeedbackText = "Very useful.",
                            Rating = 4
                        },
                        new
                        {
                            FeedbackId = 3,
                            AccountId = 3,
                            CourseId = 3,
                            FeedbackText = "Informative content.",
                            Rating = 5
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.FinalTest", b =>
                {
                    b.Property<int>("FinalTestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("finalTestId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalTestId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<bool?>("GeneratedFromExamTests")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("generatedFromExamTests");

                    b.Property<string>("TestName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("testName");

                    b.HasKey("FinalTestId")
                        .HasName("PK__FinalTes__4069E5E8C41EC087");

                    b.HasIndex("CourseId");

                    b.ToTable("FinalTest", (string)null);

                    b.HasData(
                        new
                        {
                            FinalTestId = 1,
                            CourseId = 1,
                            Duration = 120,
                            GeneratedFromExamTests = true,
                            TestName = "Final Test C#"
                        },
                        new
                        {
                            FinalTestId = 2,
                            CourseId = 2,
                            Duration = 90,
                            GeneratedFromExamTests = false,
                            TestName = "Final Test Design"
                        },
                        new
                        {
                            FinalTestId = 3,
                            CourseId = 3,
                            Duration = 60,
                            GeneratedFromExamTests = true,
                            TestName = "Final Test Marketing"
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.FinalTestQuiz", b =>
                {
                    b.Property<int>("FinalTestQuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("finalTestQuizId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalTestQuizId"));

                    b.Property<int>("FinalTestId")
                        .HasColumnType("int")
                        .HasColumnName("finalTestId");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quizId");

                    b.HasKey("FinalTestQuizId")
                        .HasName("PK__FinalTes__55B42615F456CC99");

                    b.HasIndex("FinalTestId");

                    b.HasIndex("QuizId");

                    b.ToTable("FinalTestQuiz", (string)null);

                    b.HasData(
                        new
                        {
                            FinalTestQuizId = 1,
                            FinalTestId = 1,
                            QuizId = 1
                        },
                        new
                        {
                            FinalTestQuizId = 2,
                            FinalTestId = 2,
                            QuizId = 2
                        },
                        new
                        {
                            FinalTestQuizId = 3,
                            FinalTestId = 3,
                            QuizId = 3
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Mooc", b =>
                {
                    b.Property<int>("MoocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("moocId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoocId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("courseId");

                    b.Property<DateOnly?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("createDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool?>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isPublic");

                    b.HasKey("MoocId")
                        .HasName("PK__MOOC__48B763A16B548D41");

                    b.HasIndex("CourseId");

                    b.ToTable("MOOC", (string)null);

                    b.HasData(
                        new
                        {
                            MoocId = 1,
                            CourseId = 1,
                            CreateDate = new DateOnly(2024, 1, 1),
                            Description = "MOOC for C# basics",
                            IsPublic = true
                        },
                        new
                        {
                            MoocId = 2,
                            CourseId = 2,
                            CreateDate = new DateOnly(2024, 1, 1),
                            Description = "MOOC for design principles",
                            IsPublic = true
                        },
                        new
                        {
                            MoocId = 3,
                            CourseId = 3,
                            CreateDate = new DateOnly(2024, 1, 1),
                            Description = "MOOC for marketing strategies",
                            IsPublic = false
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quizId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<int>("ExamTestId")
                        .HasColumnType("int")
                        .HasColumnName("examTestId");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int")
                        .HasColumnName("maxScore");

                    b.Property<string>("QuizName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("quizName");

                    b.Property<string>("QuizQuestion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("quizQuestion");

                    b.Property<int>("QuizTypeId")
                        .HasColumnType("int")
                        .HasColumnName("quizTypeId");

                    b.HasKey("QuizId")
                        .HasName("PK__Quiz__CFF54C3D65A7B54F");

                    b.HasIndex("ExamTestId");

                    b.HasIndex("QuizTypeId");

                    b.ToTable("Quiz", (string)null);

                    b.HasData(
                        new
                        {
                            QuizId = 1,
                            ExamTestId = 1,
                            MaxScore = 10,
                            QuizName = "C# Basics",
                            QuizQuestion = "What is a class in C#?",
                            QuizTypeId = 1
                        },
                        new
                        {
                            QuizId = 2,
                            ExamTestId = 2,
                            MaxScore = 15,
                            QuizName = "Design Principles",
                            QuizQuestion = "Is design important?",
                            QuizTypeId = 2
                        },
                        new
                        {
                            QuizId = 3,
                            ExamTestId = 3,
                            MaxScore = 20,
                            QuizName = "Marketing Strategies",
                            QuizQuestion = "Describe the 4Ps of marketing.",
                            QuizTypeId = 3
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.QuizAnswer", b =>
                {
                    b.Property<int>("QuizAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quizAnswerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizAnswerId"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("answer");

                    b.Property<bool?>("IsCorrect")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isCorrect");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quizId");

                    b.HasKey("QuizAnswerId")
                        .HasName("PK__QuizAnsw__92A9CCA7D3D2EAB4");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizAnswer", (string)null);

                    b.HasData(
                        new
                        {
                            QuizAnswerId = 1,
                            Answer = "A class is a blueprint for objects.",
                            IsCorrect = true,
                            QuizId = 1
                        },
                        new
                        {
                            QuizAnswerId = 2,
                            Answer = "A class is a type of variable.",
                            IsCorrect = false,
                            QuizId = 1
                        },
                        new
                        {
                            QuizAnswerId = 3,
                            Answer = "Yes",
                            IsCorrect = true,
                            QuizId = 2
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.QuizType", b =>
                {
                    b.Property<int>("QuizTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quizTypeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("typeName");

                    b.HasKey("QuizTypeId")
                        .HasName("PK__QuizType__6CB946D63325B49A");

                    b.ToTable("QuizType", (string)null);

                    b.HasData(
                        new
                        {
                            QuizTypeId = 1,
                            TypeName = "Multiple Choice"
                        },
                        new
                        {
                            QuizTypeId = 2,
                            TypeName = "True/False"
                        },
                        new
                        {
                            QuizTypeId = 3,
                            TypeName = "Short Answer"
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__CD98462A808B354B");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Teacher"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "Student"
                        },
                        new
                        {
                            RoleId = 4,
                            Name = "Vip Student"
                        });
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Account", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Account__roleId__4D94879B");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.ActivityLog", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Account", "Account")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__ActivityL__accou__5EBF139D");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Certificate", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Account", "Account")
                        .WithMany("Certificates")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Certifica__accou__59063A47");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Course", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.CourseCategory", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Course__category__4F7CD00D");

                    b.HasOne("OnlineLearningWebAPI.Models.Account", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("FK__Course__teacherI__4E88ABD4");

                    b.Navigation("Category");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.CourseEnrollment", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Account", "Account")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__accou__5CD6CB2B");

                    b.HasOne("OnlineLearningWebAPI.Models.Course", "Course")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__cours__5DCAEF64");

                    b.Navigation("Account");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.CourseTag", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Course", "Course")
                        .WithMany("CourseTags")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseTag__cours__5BE2A6F2");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.ExamTest", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Account", "CreatedByNavigation")
                        .WithMany("ExamTests")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__ExamTest__create__52593CB8");

                    b.HasOne("OnlineLearningWebAPI.Models.Mooc", "Mooc")
                        .WithMany("ExamTests")
                        .HasForeignKey("MoocId")
                        .IsRequired()
                        .HasConstraintName("FK__ExamTest__moocId__5165187F");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Mooc");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Feedback", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Account", "Account")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__accoun__59FA5E80");

                    b.HasOne("OnlineLearningWebAPI.Models.Course", "Course")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedback__course__5AEE82B9");

                    b.Navigation("Account");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.FinalTest", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Course", "Course")
                        .WithMany("FinalTests")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__FinalTest__cours__5629CD9C");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.FinalTestQuiz", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.FinalTest", "FinalTest")
                        .WithMany("FinalTestQuizzes")
                        .HasForeignKey("FinalTestId")
                        .IsRequired()
                        .HasConstraintName("FK__FinalTest__final__571DF1D5");

                    b.HasOne("OnlineLearningWebAPI.Models.Quiz", "Quiz")
                        .WithMany("FinalTestQuizzes")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__FinalTest__quizI__5812160E");

                    b.Navigation("FinalTest");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Mooc", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Course", "Course")
                        .WithMany("Moocs")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__MOOC__courseId__5070F446");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Quiz", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.ExamTest", "ExamTest")
                        .WithMany("Quizzes")
                        .HasForeignKey("ExamTestId")
                        .IsRequired()
                        .HasConstraintName("FK__Quiz__examTestId__534D60F1");

                    b.HasOne("OnlineLearningWebAPI.Models.QuizType", "QuizType")
                        .WithMany("Quizzes")
                        .HasForeignKey("QuizTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Quiz__quizTypeId__5441852A");

                    b.Navigation("ExamTest");

                    b.Navigation("QuizType");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.QuizAnswer", b =>
                {
                    b.HasOne("OnlineLearningWebAPI.Models.Quiz", "Quiz")
                        .WithMany("QuizAnswers")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__QuizAnswe__quizI__5535A963");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Account", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("Certificates");

                    b.Navigation("CourseEnrollments");

                    b.Navigation("Courses");

                    b.Navigation("ExamTests");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Course", b =>
                {
                    b.Navigation("CourseEnrollments");

                    b.Navigation("CourseTags");

                    b.Navigation("Feedbacks");

                    b.Navigation("FinalTests");

                    b.Navigation("Moocs");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.CourseCategory", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.ExamTest", b =>
                {
                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.FinalTest", b =>
                {
                    b.Navigation("FinalTestQuizzes");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Mooc", b =>
                {
                    b.Navigation("ExamTests");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Quiz", b =>
                {
                    b.Navigation("FinalTestQuizzes");

                    b.Navigation("QuizAnswers");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.QuizType", b =>
                {
                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("OnlineLearningWebAPI.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
